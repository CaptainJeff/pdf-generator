{"version":3,"sources":["assets/carton.pdf","App.js","index.js"],"names":["App","useState","input1","setInput1","input2","setInput2","input3","setInput3","input4","setInput4","input5","setInput5","input6","setInput6","input7","setInput7","pdf","setPdf","pdfBase","setPdfBase","isReview","setIsReview","a","fetch","blankPdf","then","res","arrayBuffer","existingPdfBytes","PDFDocument","load","pdfDoc","embedFont","StandardFonts","Helvetica","helveticaFont","pages","getPages","firstPage","drawText","x","y","size","font","color","rgb","maxWidth","save","pdfBytes","utf8Binary","Uint8Array","encoded","encode","Fragment","className","Button","primary","variant","onClick","fileDownload","hideNavbar","document","base64","Input","autoFocus","placeholder","value","onChange","e","target","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85fdda82.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/carton.0636c017.pdf\";","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Input, Button } from \"@material-ui/core\";\nimport blankPdf from \"./assets/carton.pdf\";\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport fileDownload from \"js-file-download\";\nimport PDFViewer from \"pdf-viewer-reactjs\";\nimport { encode } from \"uint8-to-base64\";\n\nfunction App() {\n  const [input1, setInput1] = useState(\"\");\n  const [input2, setInput2] = useState(\"\");\n  const [input3, setInput3] = useState(\"\");\n  const [input4, setInput4] = useState(\"\");\n  const [input5, setInput5] = useState(\"\");\n  const [input6, setInput6] = useState(\"\");\n  const [input7, setInput7] = useState(\"\");\n  const [pdf, setPdf] = useState(null);\n  const [pdfBase, setPdfBase] = useState();\n  const [isReview, setIsReview] = useState(false);\n\n  async function modifyPdf() {\n    const existingPdfBytes = await fetch(blankPdf).then((res) =>\n      res.arrayBuffer()\n    );\n\n    const pdfDoc = await PDFDocument.load(existingPdfBytes);\n    const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n\n    const pages = pdfDoc.getPages();\n    const firstPage = pages[0];\n    firstPage.drawText(input1, {\n      x: 90,\n      y: 377.5,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 1),\n    });\n\n    firstPage.drawText(input2, {\n      x: 56,\n      y: 355,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 1),\n    });\n\n    firstPage.drawText(input3, {\n      x: 56,\n      y: 320,\n      size: 17,\n      font: helveticaFont,\n      maxWidth: 500,\n      color: rgb(0, 0, 1),\n    });\n\n    firstPage.drawText(input4, {\n      x: 153,\n      y: 247,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 1),\n    });\n\n    firstPage.drawText(input5, {\n      x: 56,\n      y: 220,\n      size: 17,\n      font: helveticaFont,\n      maxWidth: 500,\n      color: rgb(0, 0, 1),\n    });\n\n    firstPage.drawText(input6, {\n      x: 102,\n      y: 158,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 1),\n    });\n\n    firstPage.drawText(input6, {\n      x: 243,\n      y: 113,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 1),\n    });\n\n    const pdfBytes = await pdfDoc.save();\n    const utf8Binary = new Uint8Array(pdfBytes);\n    const encoded = encode(utf8Binary);\n    setPdfBase(encoded);\n    setPdf(pdfBytes);\n    setIsReview(true);\n  }\n\n  return (\n    <React.Fragment>\n      {!isReview ? (\n        <div className=\"App\">\n          <div className=\"inputsContainer\">\n            <Input\n              autoFocus\n              placeholder=\"Input1\"\n              value={input1}\n              className=\"InputTop\"\n              onChange={(e) => setInput1(e.target.value)}\n            />\n            <Input\n              placeholder=\"Input2\"\n              value={input2}\n              className=\"Input\"\n              onChange={(e) => setInput2(e.target.value)}\n            />\n          </div>\n          <div className=\"inputsContainer\">\n            <Input\n              autoFocus\n              placeholder=\"Input3\"\n              value={input3}\n              className=\"InputTop\"\n              onChange={(e) => setInput3(e.target.value)}\n            />\n            <Input\n              placeholder=\"Input4\"\n              value={input4}\n              className=\"Input\"\n              onChange={(e) => setInput4(e.target.value)}\n            />\n          </div>\n          <div className=\"inputsContainer\">\n            <Input\n              autoFocus\n              placeholder=\"Input5\"\n              value={input5}\n              className=\"InputTop\"\n              onChange={(e) => setInput5(e.target.value)}\n            />\n            <Input\n              placeholder=\"Input6\"\n              value={input6}\n              className=\"Input\"\n              onChange={(e) => setInput6(e.target.value)}\n            />\n          </div>\n          <div className=\"inputsContainer\">\n            <Input\n              autoFocus\n              placeholder=\"Input7\"\n              value={input7}\n              className=\"Inputone\"\n              onChange={(e) => setInput7(e.target.value)}\n            />\n          </div>\n\n          <Button\n            className=\"FormContainer_btn\"\n            primary\n            variant=\"contained\"\n            onClick={modifyPdf}\n          >\n            Preview the Pdf\n          </Button>\n        </div>\n      ) : (\n        <React.Fragment>\n          <div className=\"inputsWrapper\">\n            <Button\n              className=\"editbtn\"\n              primary\n              variant=\"contained\"\n              onClick={() => setIsReview(false)}\n            >\n              Edit\n            </Button>\n            <Button\n              className=\"FormContainer_btn\"\n              primary\n              variant=\"contained\"\n              onClick={() => fileDownload(pdf, \"carton.pdf\")}\n            >\n              Download the Pdf\n            </Button>\n          </div>\n          <PDFViewer\n            hideNavbar={true}\n            document={{\n              base64: pdfBase,\n            }}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}